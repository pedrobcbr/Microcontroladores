1)
a) bis.w #0x01,R5;
b) bis.w #0x03,R6;
c) and.w #0x0B,R7;
d) and.w #0x03,R8;
e) xor.w #0x80,R9;


f) xor.w #0xF0,R10;
   bis.w #0x0F,R10;


2) if(i>j) f = g +h +10;
   else f = g - h - 10;

cmp R7,R8;
jl ELSE:
add.w R6,R5;
add.w #0x10,R5;
mov.w R5,R4;
jmp EXIT;

ELSE:

sub.w R6,R5;
sub.w #0x10,R5;
mov.w R5,R4;

EXIT:


3) while(save[i] !=k) i++;

LOOP: mov.w R7,R11;
rla R11;
add.w R10,R11;
cmp 0(R11),R9;
jeq EXIT;
inc.w R7;
jmp LOOP;

EXIT:


4) for( i=0; i<100; i++)
   A[i] = i*2;

mov.w 0x00,R7;
LOOP: 
mov.w R7,R11;
mov.w 0x64,R12;
cmp R12,R11;
jge EXIT; 
add.w R10,R9;
rla R11;
mov.w R11,0(R9);
inc.w R7
jmp LOOP;

EXIT:

5)
mov.w 0x63,R7;
LOOP: 
mov.w R7,R11;
mov.w 0x00,R12;
cmp R12,R11; 
jl EXIT: 
add.w R10,R9;
rla R11;
mov.w R11,0(R9);
dec.w R7
jmp LOOP;

EXIT:














